<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="LAPTOP-HUB3DN2R" failures="0" tests="1" name="Test(failed)(failed)" time="11.661" errors="0" timestamp="2024-07-14T16:39:10 IST">
  <testcase classname="com.demoApp.testCases.BaseClass" name="@BeforeClass setup" time="11.322">
    <failure type="java.lang.ExceptionInInitializerError">
      <![CDATA[java.lang.ExceptionInInitializerError
at com.demoApp.testCases.BaseClass.setup(BaseClass.java:57)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
Caused by: java.lang.IllegalArgumentException: key can't be empty
at java.base/java.lang.System.checkKey(System.java:1105)
at java.base/java.lang.System.getProperty(System.java:968)
at org.apache.logging.log4j.util.SystemPropertiesPropertySource.getProperty(SystemPropertiesPropertySource.java:99)
at org.apache.logging.log4j.util.SystemPropertiesPropertySource.containsProperty(SystemPropertiesPropertySource.java:107)
at org.apache.logging.log4j.util.PropertiesUtil$Environment.lambda$reload$1(PropertiesUtil.java:514)
at java.base/java.lang.Iterable.forEach(Iterable.java:75)
at org.apache.logging.log4j.util.PropertiesUtil$Environment.lambda$reload$2(PropertiesUtil.java:513)
at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:194)
at java.base/java.util.HashMap$KeySpliterator.forEachRemaining(HashMap.java:1715)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:556)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:546)
at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:611)
at org.apache.logging.log4j.util.PropertiesUtil$Environment.reload(PropertiesUtil.java:510)
at org.apache.logging.log4j.util.PropertiesUtil$Environment.<init>(PropertiesUtil.java:492)
at org.apache.logging.log4j.util.PropertiesUtil$Environment.<init>(PropertiesUtil.java:465)
at org.apache.logging.log4j.util.PropertiesUtil.<init>(PropertiesUtil.java:98)
at org.apache.logging.log4j.util.PropertiesUtil.<init>(PropertiesUtil.java:90)
at org.apache.logging.log4j.util.PropertiesUtil.lambda$static$0(PropertiesUtil.java:66)
at org.apache.logging.log4j.util.LazyUtil$SafeLazy.value(LazyUtil.java:113)
at org.apache.logging.log4j.util.Lazy.get(Lazy.java:39)
at org.apache.logging.log4j.util.PropertiesUtil.getProperties(PropertiesUtil.java:132)
at org.apache.logging.log4j.LogManager.<clinit>(LogManager.java:73)
... 25 more
... Removed 23 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setup -->
  <testcase classname="com.demoApp.testCases.BaseClass" name="@AfterClass tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="com.demoApp.testCases.LoginPageTest" name="verifyLoginTest" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginTest -->
</testsuite> <!-- Test(failed)(failed) -->
